" Los tipos de datos en C son los siguientes

Tipo de dato / Descripción / Memoria

int / Cantidad entera / 2 bytes o una palabra (varía según el compilador).
char / Carácter / 1 byte.
float / Almacena valores reales en punto flotante / 1 palabra (4 bytes).
double / Almacena valores reales en doble precisión. / 2 palabras (8 bytes).
void / Se utiliza para definir una función que no devuelve ningún valor
    o declarar punteros genéricos.


Estos tipos básicos admiten una modificación del rango de valores, aplicando
las siguientes palabras reservadas:

short(corto)
long(largo)
signed(con signo)
unsigned(sin signo)

TIPO / Número de bits /Rango
char              /	8 /	  -128 a 127
unsigned char     / 8 /	  0 a 255
signed char       /	8 /	  -128 a 127
short             /	16 /	-32768 a 32767
int               /	16 /	-32768 a 32767
unsigned int      /	16 /	0 a 65535
signed int        /	16 /	-32768 a 32767
short int         /	16 /	-32768 a 32767
unsigned short int/	16 /	0 a 65535
signed short int  /	16 /	-32768 a 32767
long int          /	32 /	-2147483648 a 2147483647
signed long int   /	32 /	-2147483648 a 2147483647
unsigned long int /	32 /	0 a 4294967295
long              /	32 /	-2147483648 a 2147483647
unsigned long     /	32 /	0 a 4294967295
float             /	32 /	3.4E-38 a 3.4E+38
double            /	64 /	1.7E-308 a 1.7E+308
long double       /	64 ó 80  (según versión) /	1.7E-308 a 1.7E+308   
                                            ó 3.4E-4932 a 1.1E+4932

" Array

En C para definir un 'array' se tiene que definir el tipo de dato primario,
y en el nombre se declara como 'array' con corchetes '[]', ejemplo: int arr[8].
Se puede o no definir la longitud del 'array', pero hay que recordar que en
C los array son estáticos.

En C no hay un tipo de dato 'string', por lo que las cadenas de caracteres
deben de ser un 'array' de tipo 'char'.
